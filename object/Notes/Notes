
    public class NameOfClass (parameter / parameters){
                //code
    }                                                           //return type class
    =======================
        public int NameOfClass1 (parameter / parameters){
                //code
    }                                                           //return type is int
    =======================
        public String NameOfClass2 (parameter / parameters){
                //code
    }                                                           //return type is String
        =======================
        public Char NameOfClass3 (parameter / parameters){
                //code
    }                                                           //return type is Char
        =======================
         public Char lastChar (String str){
                return k;
    }                                                           //return type is Char
        Char ch=o.lastChar("Task");
        =======================


        Access Modifier:
        -public     =   anywhere from the same project
        -private    =   in the same class
        -default    =   same package, subclasses
        -protected  =   from the same package


        Return Types:
        -void       =>  Does not return any value/data
        -primitives =>  int, boolean, short, byte, double, float, char, long
        -object     =>  String, or any other objects type(Car, Animal, Phone, Character, ... )

            String str="test";
            char letter=str.charAt(0);
            int a=o.nameOfMethod();


        Parameters:
            public void print(String name){
                sout("Your name is "+name);
            }

            o.print("Leo");         //  OUTCOME ===> Your name is Leo
            o.print("Java");        //  Your name is Java

        =======Syntax of Method=======
        accessModifier+ return type+ MethodName+ (Parameters)---->Body{}

        ***Method Signature: name of the method and parameters




        Member of Class:

        Methods:

        Object:

        creating method

        !-constructor
        =========================================================================

        object      ---->   instance of class
            -instance variables are belong to Object
            -object can have behavior(methods)
        =========================================================================
        instance variables --vs-- local variables

        -instance variables are in the class but out of any block or method
        -instance variables can have default values, but local variables can not have default values
